name: lint
on:
  push:
    tags:
      - v*
    branches:
      - main
  pull_request:
permissions:
  contents: read
  # Optional: allow read access to pull request. Use with `only-new-issues` option.
  pull-requests: read
jobs:
  lint-go:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: '0'
      - uses: actions/setup-go@v4
        with:
          go-version-file: go.mod
          # Using setup-go cache conflicts with golangci-lint action own cache management
          cache: false
          cache-dependency-path: go.sum
      - name: golangci-lint
        uses: golangci/golangci-lint-action@v3
        with:
          # Require: The version of golangci-lint to use.
          # When `install-mode` is `binary` (default) the value can be v1.2 or v1.2.3 or `latest` to use the latest version.
          # When `install-mode` is `goinstall` the value can be v1.2.3, `latest`, or the hash of a commit.
          version: latest

          # Optional: golangci-lint command line arguments.
          args: --timeout=10m

          # Optional: show only new issues if it's a pull request. The default value is `false`.
          only-new-issues: true

          # Optional:The mode to install golangci-lint. It can be 'binary' or 'goinstall'.
          install-mode: "goinstall"
      - name: Check tidy
        run: go mod tidy && git diff-files --exit-code go.mod go.sum
  lint-python-type:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Install Python requirements
        run: pip3 install -r requirements.txt
      - name: Install pyright
        run: pip3 install pyright
      - name: Run pyright
        run: pyright tasks
  lint-python:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Install lint python requirements
        run: pip3 install -r https://raw.githubusercontent.com/DataDog/datadog-agent-buildimages/main/requirements/circleci.txt
      - name: Run linters
        run: |
          flake8 tasks
          black --check --diff tasks
          isort --check-only --diff tasks
          vulture --ignore-decorators @task --ignore-names 'test_*,Test*' tasks
